# Custom Docker Image für TTS Training mit xFormers Support
# Optimiert mit offiziellem PyTorch Image: PyTorch 2.3.0 + CUDA 12.1 + Python 3.11

FROM pytorch/pytorch:2.3.0-cuda12.1-cudnn8-runtime

# Umgebungsvariablen
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# System-Abhängigkeiten installieren (bereits in PyTorch Image enthalten)
USER root
RUN apt-get update && apt-get install -y \
    git \
    wget \
    curl \
    vim \
    htop \
    tmux \
    screen \
    libsndfile1 \
    ffmpeg \
    libavcodec-extra \
    && rm -rf /var/lib/apt/lists/*

# xFormers installieren - kompatibel mit PyTorch 2.3.0 + CUDA 12.1
RUN pip install xformers==0.0.26.post1

# Unsloth und TTS-spezifische Pakete
RUN pip install "unsloth[colab-new] @ git+https://github.com/unslothai/unsloth.git"

# Audio und ML Bibliotheken
RUN pip install \
    librosa \
    soundfile \
    scipy \
    transformers \
    datasets \
    tokenizers \
    accelerate \
    peft \
    bitsandbytes \
    trl \
    huggingface_hub \
    wandb \
    tensorboard \
    matplotlib \
    seaborn \
    jupyter \
    jupyterlab

# Monitoring und Development Tools
RUN pip install \
    psutil \
    gpustat \
    py3nvml

# CUDA und PyTorch Umgebung verifizieren
RUN python -c "import torch; print(f'PyTorch: {torch.__version__}')"
RUN python -c "import torch; print(f'CUDA available: {torch.cuda.is_available()}')"
RUN python -c "import torch; print(f'CUDA version: {torch.version.cuda}')"
RUN python -c "import xformers; print(f'xFormers: {xformers.__version__}')"

# Arbeitsverzeichnis
WORKDIR /workspace

# Default Command
CMD ["/bin/bash"]
